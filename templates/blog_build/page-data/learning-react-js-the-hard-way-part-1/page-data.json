{"componentChunkName":"component---src-templates-post-jsx","path":"/learning-react-js-the-hard-way-part-1","result":{"data":{"markdownRemark":{"html":"<p>Or </p>\n<h1 id=\"how-my-code-quality-started-to-decrease\" style=\"position:relative;\"><a href=\"#how-my-code-quality-started-to-decrease\" aria-label=\"how my code quality started to decrease permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How my code quality started to decrease</h1>\n<p>When I got introduced to <a href=\"https://reactjs.org\">ReactJS</a> JavaScript was nothing bigger for me than <em>jQuery</em> and changing\nsome DOM elements using event handlers.</p>\n<p>To be honest from that point of view there was no explanation how those\nweird HTML files with a super suspicious content like</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Some page title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/bundleA.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/bundleB.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/bundleC.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/bundleD.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/bundleE.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>inject all the content needed for a single page application.</p>\n<div><img src=\"https://media.giphy.com/media/8vLrx3xC3xpeYGXXVm/giphy.gif\" style=\"width: 90%; margin-left: 5%\"></div>\n<p>Well anyway, I guess you get the gist. The current JS was not even close familiar to me. But I was curious so I started\nreading into JS and actually started to like it.</p>\n<p>One of the tweaks I like in JS is the fact that you're able to write a small logical statement in a short\nversion. For example JS' support for the <code class=\"language-text\">?</code>-operator</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> i <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"fizz\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">%</span> <span class=\"token number\">7</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"buzz\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>But my favourite are the arrow functions</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onscroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NO!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div><img src=\"https://media.giphy.com/media/P0d4NSUbhl6ww/giphy.gif\" style=\"width: 90%; margin-left: 5%\"></div><br>\n<h3 id=\"but-wait\" style=\"position:relative;\"><a href=\"#but-wait\" aria-label=\"but wait permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>But wait!</h3>\n<p>There's a <strong>dark</strong> side. But <code class=\"language-text\">dark != bad</code>, right?<br>\nOr is it <code class=\"language-text\">dark !== bad</code>. I'm not sure.<br>\nHas dark the same type? If so, do I want to compare types?<br>\nStill, I'm confused.<br>\nLet's try it a different way.</p>\n<p>Give both \"variables\" a <em>type</em>.\nFor now we define<br>\n<code class=\"language-text\">dark = 0</code> from type Number and<br>\n<code class=\"language-text\">bad = &quot;0&quot;</code> from type String</p>\n<p>both receive the value 0, as if we would put each variable on a scale in it's universe. So the value for dark would be 0 in\n0 to 10, dark to bright and bad receives 0 for 0 to 10, bad to good. Logical, right?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">let</span> dark <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">let</span> bad <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> bad <span class=\"token operator\">!=</span> dark\n<span class=\"token boolean\">false</span>\n<span class=\"token operator\">></span> bad <span class=\"token operator\">!==</span> dark\n<span class=\"token boolean\">true</span></code></pre></div>\n<p>What's that crappy <code class=\"language-text\">!=</code>? Instead we receive the new born child <code class=\"language-text\">!==</code>.<br>\nThe operator which I know since my dawn of programming... gone. </p>\n<div><img src=\"https://media.giphy.com/media/Ahtg0hh0edZAs/giphy.gif\" style=\"width: 90%; margin-left: 5%\"></div>\n<p>I continue studying this operator, keep digging to understand it.<br>\nDigging deeper and deeper, day for day.  </p>\n<blockquote>\n<p>Captain's log: Half of my crew left my after I introduced the idea of digging deeper into this operator hell. I started to see curious combinations. Once I wanted to understand how the type comparison works for <code class=\"language-text\">Object</code>'s.  I lost the other half of my crew after I tried</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token boolean\">false</span>\n<span class=\"token operator\">></span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token boolean\">false</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">\"object\"</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">\"object\"</span></code></pre></div>\n<p><img alt=\"thinking meme\" src=\"/images/thinking_meme.jpg\" style=\"width: 20%; margin-right: 5%\"/> HMMMMMMMMMMMMMMMMMMM </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">true</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token function\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">true</span></code></pre></div>\n<p>Never mind seems like I search for a reason to hate the language.\nBut it could be worse, right?<br>\nEver heard of <em>libraries/packages</em>? Awesome shit! </p>\n<p>Imagine this:</p>\n<blockquote>\n<p>You're thinking about a feature you could add to your codebase, which calculates the correlation of a set of time intervals. The built in JS API <code class=\"language-text\">Date</code> does not give you the full set of features you need to get this job done. You do research for a package or library which supports your required set of features. Since you're familiar with the beloved package manager <strong>npm</strong> you know <a href=\"https://npmjs.org\">npmjs.org</a>.  Let's hit the search. <a href=\"https://www.npmjs.com/search?q=time\">...result</a></p>\n</blockquote>\n<p><img src=\"/images/npm_search_time.png\" alt=\"npm search &#x22;time&#x22;\"></p>\n<p>1347 search results. Ha! Easy choice, right?  </p>\n<p>In the next post (<a href=\"/blog/learning-react-js-the-hard-way-part-2\">Learning React(JS) the hard way Part 2</a>)\nI will introduce you to my personal package hell and how I started to learn the <em>real</em> ReactJS, not JS like today.</p>\n<div><img src=\"https://media.giphy.com/media/aq23msctvnd4Y/giphy.gif\" style=\"width: 90%; margin-left: 5%\"></div><br>\n<p>See you next week\nPhil</p>","timeToRead":3,"excerpt":"Or  How my code quality started to decrease When I got introduced to ReactJS JavaScript was nothing bigger for me than jQuery and changing…","frontmatter":{"title":"Learning React(JS) the hard way Part 1","cover":"/blog/images/second_post.jpg","date":"2019-05-12","category":"tech","tags":["development","stuff","other"],"author":"phil"},"fields":{"slug":"/learning-react-js-the-hard-way-part-1"}},"prev":{"excerpt":"Hey friend, this is the second part of my small series about me getting introduced to JS.   If you're here by…","frontmatter":{"title":"Learning React(JS) the hard way Part 2","cover":"/blog/images/gareth-harrison-1390194-unsplash.jpg","date":"2019-05-19"},"fields":{"slug":"/learning-react-js-the-hard-way-part-2"}},"next":{"excerpt":"Hello fellow reader, my name is Philipp, I am a undergraduate student in a Berlin based university. Since my…","frontmatter":{"title":"It begins","cover":"/blog/images/first_post.jpg","date":"2019-05-05"},"fields":{"slug":"/it-begins"}},"authors":{"edges":[{"node":{"uid":"phil","name":"Philipp Zettl","image":"/blog/images/phil.jpg","url":"https://wiki.godesteem.de","bio":"I love to code and open source. Mostly I'm into Python but lately other languages like C++ and JavaScript became a part of my daily life."}}]}},"pageContext":{"slug":"/learning-react-js-the-hard-way-part-1","total":6,"prev":"/learning-react-js-the-hard-way-part-2","next":"/it-begins"}},"staticQueryHashes":[]}