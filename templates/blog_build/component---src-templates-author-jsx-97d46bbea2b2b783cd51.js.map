{"version":3,"sources":["webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx","webpack:///./src/components/AuthorProfile/AuthorProfile.jsx","webpack:///./src/components/AuthorName/AuthorName.jsx","webpack:///./src/components/AuthorBio/AuthorBio.jsx","webpack:///./src/components/AuthorStats/AuthorStats.jsx","webpack:///./src/templates/author.jsx"],"names":["AuthorImage","render","this","props","author","name","image","url","className","href","style","backgroundImage","React","Component","AuthorMeta","children","classes","classNames","AuthorLocation","location","AuthorWebsite","AuthorProfile","AuthorName","AuthorBio","bio","AuthorStats","postEdges","length","AuthorTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","setState","pageContext","cover","data","allMarkdownRemark","edges","authorsEdges","allAuthorsJson","getAuthor","node","Drawer","isOpen","title","config","siteTitle","Navigation","onClose","SiteWrapper","MainHeader","MainNav","BlogLogo","logo","siteLogo","PostListing","postAuthors","SocialMediaIcons","urls","socialUrls","Footer","copyright","promoteGatsby"],"mappings":"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","file":"component---src-templates-author-jsx-97d46bbea2b2b783cd51.js","sourcesContent":["import React from \"react\";\nimport \"./AuthorImage.css\";\n\nclass AuthorImage extends React.Component {\n  render() {\n    const { name, image, url } = this.props.author;\n    if (image) {\n      return (\n        <figure className=\"author-image\">\n          <a\n            className=\"img\"\n            href={url}\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          >\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\n          </a>\n        </figure>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorImage;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorMeta.css\";\n\nclass AuthorMeta extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-meta\", className);\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default AuthorMeta;\n","import React from \"react\";\n\nclass AuthorLocation extends React.Component {\n  render() {\n    const { location } = this.props;\n    if (location) {\n      return <span className=\"author-location icon-location\">{location}</span>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLocation;\n","import React from \"react\";\n\nclass AuthorWebsite extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <span className=\"author-link icon-link\">\n          <a href={url}>{url}</a>\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorWebsite;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorProfile.css\";\n\nclass AuthorProfile extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-profile\", className);\n\n    return <section className={classes}>{children}</section>;\n  }\n}\n\nexport default AuthorProfile;\n","import React from \"react\";\nimport \"./AuthorName.css\";\n\nclass AuthorName extends React.Component {\n  render() {\n    const { name } = this.props;\n    if (name) {\n      return <h1 className=\"author-title\">{name}</h1>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorName;\n","import React from \"react\";\nimport \"./AuthorBio.css\";\n\nclass AuthorBio extends React.Component {\n  render() {\n    const { bio } = this.props;\n    if (bio) {\n      return <h2 className=\"author-bio\">{bio}</h2>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorBio;\n","import React from \"react\";\n\nclass AuthorStats extends React.Component {\n  render() {\n    const { postEdges } = this.props;\n    const getPostText = () => {\n      if (postEdges) {\n        return postEdges.length > 1\n          ? `${postEdges.length} posts`\n          : `${postEdges.length} post`;\n      }\n      return \"No posts\";\n    };\n    return (\n      <span className=\"author-stats\">\n        <i className=\"icon-stats\" /> {getPostText()}\n      </span>\n    );\n  }\n}\n\nexport default AuthorStats;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorProfile from \"../components/AuthorProfile/AuthorProfile\";\nimport AuthorName from \"../components/AuthorName/AuthorName\";\nimport AuthorBio from \"../components/AuthorBio/AuthorBio\";\nimport AuthorMeta from \"../components/AuthorMeta/AuthorMeta\";\nimport AuthorLocation from \"../components/AuthorLocation/AuthorLocation\";\nimport AuthorWebsite from \"../components/AuthorWebsite/AuthorWebsite\";\nimport AuthorStats from \"../components/AuthorStats/AuthorStats\";\nimport Footer from \"../components/Footer/Footer\";\nimport SocialMediaIcons from \"../components/SocialMediaIcons/SocialMediaIcons\";\nimport Layout from \"../components/layout\";\n\nclass AuthorTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const { author, cover } = this.props.pageContext;\n    const postEdges =\n      this.props.data.allMarkdownRemark &&\n      this.props.data.allMarkdownRemark.edges\n        ? this.props.data.allMarkdownRemark.edges\n        : [];\n    const authorsEdges =\n      this.props.data.allAuthorsJson && this.props.data.allAuthorsJson.edges\n        ? this.props.data.allAuthorsJson.edges\n        : [];\n    const getAuthor = () => authorsEdges[0].node;\n\n    return (\n      <Layout location={this.props.location}>\n        <Drawer className=\"author-template\" isOpen={this.state.menuOpen}>\n          <Helmet title={`Posts by \"${author}\" | ${config.siteTitle}`} />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n\n          <SiteWrapper>\n            <MainHeader className=\"author-head\" cover={cover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n              </MainNav>\n            </MainHeader>\n\n            <AuthorProfile className=\"inner\">\n              <AuthorImage author={getAuthor()} />\n              <AuthorName name={getAuthor().name} />\n              <AuthorBio bio={getAuthor().bio} />\n              <AuthorMeta>\n                <AuthorLocation location={getAuthor().location} />\n                <AuthorWebsite url={getAuthor().url} />\n              </AuthorMeta>\n              <AuthorStats postEdges={postEdges} />\n            </AuthorProfile>\n\n            {/* PostListing component renders all the posts */}\n            <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\n\n            {/* Social information here */}\n            <SocialMediaIcons urls={getAuthor().socialUrls} />\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query AuthorPage($author: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: $author } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            author\n          }\n        }\n      }\n    }\n    allAuthorsJson(filter: { uid: { eq: $author } }) {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n          location\n          socialUrls\n        }\n      }\n    }\n  }\n`;\n\nexport default AuthorTemplate;\n"],"sourceRoot":""}